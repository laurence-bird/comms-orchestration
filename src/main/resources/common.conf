kafka {
  group.id = "comms-orchestrator"

  topics {
    triggered.v2 = "comms.triggered.v2"

    orchestrated {
      email.v2 = "comms.orchestrated.email.v2"
    }

    orchestration.started = "comms.orchestration.started"

    failed = "comms.failed"

    scheduling {
      failedCancellation = "comms.failed.cancellation"
      cancellationRequest = "comms.cancellation.requested"
      cancelled = "comms.cancelled"
    }
  }

  producer.retry {
    attempts = 5
    interval = 1 second
  }

}

akka.kafka.consumer {
  wakeup-timeout = 5s
  max-wakeups = 24
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
}

profile.service.http {
  attempts = 5
  interval = 1 second
}

aws {
  region = "eu-west-1"
}

scheduling {
  loadPending.delay = 5 minutes
  pollForExpired.interval = 10 minutes
  pollForExpired.interval = ${?POLL_FOR_EXPIRED_INTERVAL}

}