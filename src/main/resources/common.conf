kafka {
  group.id = "comms-orchestrator"

  topics {
    triggered {
      v2 = "comms.triggered.v2"
      v3 = "comms.triggered.v3"
    }

    orchestrated {
      email {
        v3 = "comms.orchestrated.email.v3"
      }
      sms {
        v2 = "comms.orchestrated.sms.v2"
      }
    }

    orchestration.started {
      v2 = "comms.orchestration.started.v2"
    }

    failed {
      v2 = "comms.failed.v2"
    }

    scheduling {
      failedCancellation {
        v2 = "comms.failed.cancellation.v2"
      }
      cancellationRequest {
        v1 = "comms.cancellation.requested"
        v2 = "comms.cancellation.requested.v2"
      }
      cancelled {
        v2 = "comms.cancelled.v2"
      }
    }
  }

  producer.retry {
    attempts = 5
    initialInterval = 1 second
    exponent = 2.0
  }

}

akka.kafka.consumer {
  wakeup-timeout = 5s
  max-wakeups = 24
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
}

profile.http.retry {
  # This means we spend a max of just over 2 minutes retrying,
  # which is hopefully long enough to recover from flaky DNS
  attempts = 8
  initialInterval = 1 second
  exponent = 2.0
}

aws {
  region = "eu-west-1"
}

scheduling {
  loadPending.delay = 5 minutes
  pollForExpired.interval = 10 minutes
  pollForExpired.interval = ${?POLL_FOR_EXPIRED_INTERVAL}

}
